from faker import Faker
from faker_schema.faker_schema import FakerSchema
from faker_web import WebProvider


fake = Faker()
fake.add_provider(WebProvider)

faker = FakerSchema(faker=fake)
headers_schema = {'Content-Type': 'content_type', 'Server': 'server_token'}
fake_headers = faker.generate_fake(headers_schema)
print(fake_headers)
# {'Content-Type': 'application/json', 'Server': 'Apache/2.0.51 (Ubuntu)'}


from mimesis.locales import Locale
from mimesis.enums import Gender
from mimesis import Person, Datetime, Text, Code, Address, Finance, Cryptographic, Development, File, Hardware, Internet, Path, Payment, Transport, Science

person = Person(Locale.ZH)
print(dir(person))
print(person.academic_degree())
print(person.birthdate())
print(person.blood_type())
print(person.email()) 
print(person.first_name())
print(person.full_name())
print(person.gender()) 
print(person.gender_code()) 
print(person.gender_symbol())
print(person.get_current_locale()) 
print(person.height()) 
print(person.identifier()) 
print(person.language())
print(person.last_name()) 
print(person.name()) 
print(person.nationality())
print(person.occupation()) 
print(person.password()) 
print(person.phone_number()) 
print(person.political_views()) 
print(person.sex()) 
print(person.surname()) 
print(person.telephone()) 
print(person.title()) 
print(person.university()) 
print(person.username()) 
print(person.views_on()) 
print(person.weight()) 
print(person.worldview())

text = Text(Locale.ZH)
print(dir(text))
print(','.join(text.alphabet())) 
print(text.answer()) 
print(text.color()) 
print(text.emoji()) 
print(text.hex_color()) 
print(text.level()) 
print(text.quote()) 
print(text.rgb_color()) 
print(text.sentence()) 
print(text.text()) 
print(text.title()) 
print(text.word()) 
print(','.join(text.words()))

code = Code()
print(dir(code))
print(code.ean()) 
print(code.imei()) 
print(code.isbn()) 
print(code.issn()) 
print(code.pin())

address = Address(Locale.ZH)
print(dir(address))
print(address.address()) 
print(address.calling_code()) 
print(address.city()) 
print(address.continent()) 
print(','.join(address.coordinates()))
print(address.country()) 
print(address.country_code()) 
print(address.country_emoji_flag()) 
print(address.federal_subject()) 
print(address.isd_code()) 
print(address.latitude()) 
print(address.longitude()) 
print(address.postal_code()) 
print(address.prefecture()) 
print(address.province()) 
print(address.region()) 
print(address.state()) 
print(address.street_name()) 
print(address.street_number()) 
print(address.street_suffix()) 
print(address.zip_code())

finance = Finance(Locale.ZH)
print(dir(finance))
print(finance.bank()) 
print(finance.company()) 
print(finance.company_type()) 
print(finance.cryptocurrency_iso_code()) 
print(finance.cryptocurrency_symbol()) 
print(finance.currency_iso_code()) 
print(finance.currency_symbol()) 
print(finance.price()) 
print(finance.price_in_btc()) 
print(finance.stock_exchange()) 
print(finance.stock_name()) 
print(finance.stock_ticker())

cryptographic = Cryptographic()
print(dir(cryptographic))
print(cryptographic.hash())
print(cryptographic.mnemonic_phrase())
print(cryptographic.token_bytes())
print(cryptographic.token_hex())
print(cryptographic.token_urlsafe())
print(cryptographic.uuid())


development = Development()
print(dir(development))
print(development.calver())
print(development.ility())
print(development.os())
print(development.programming_language())
print(development.software_license())
print(development.stage())
print(development.system_quality_attribute())
print(development.version())

file = File()
print(dir(file))
print(file.extension())
print(file.file_name())
print(file.mime_type())
print(file.size())

hardware = Hardware()
print(dir(hardware))
print(hardware.cpu())
print(hardware.cpu_codename())
print(hardware.cpu_frequency())
print(hardware.generation())
print(hardware.graphics())
print(hardware.manufacturer())
print(hardware.phone_model())
print(hardware.ram_size())
print(hardware.ram_type())
print(hardware.resolution())
print(hardware.screen_size())
print(hardware.ssd_or_hdd())

internet = Internet()
print(dir(internet))
print(internet.content_type())
print(internet.dsn())
print(internet.hostname())
print(internet.http_method())
print(str(internet.http_request_headers()))
print(internet.http_response_headers())
print(internet.http_status_code())
print(internet.http_status_message())
print(internet.ip_v4())
print(internet.ip_v4_object())
print(internet.ip_v4_with_port())
print(internet.ip_v6())
print(internet.ip_v6_object())
print(internet.mac_address())
print(internet.path())
print(internet.port())
print(internet.public_dns())
print(internet.query_parameters())
print(internet.slug())
print(internet.stock_image_url())
print(internet.tld())
print(internet.top_level_domain())
print(internet.uri())
print(internet.url())
print(internet.user_agent())

path = Path()
print(dir(path))
print(path.dev_dir())
print(path.home())
print(path.project_dir())
print(path.root())
print(path.user())
print(path.users_folder())

payment = Payment()
print(dir(payment))
print(payment.bitcoin_address())
print(payment.cid())
print(payment.credit_card_expiration_date())
print(payment.credit_card_network())
print(payment.credit_card_number())
print(payment.credit_card_owner())
print(payment.cvv())
print(payment.ethereum_address())
print(payment.paypal())

transport = Transport()
print(dir(transport))
print(transport.airplane())
print(transport.car())
print(transport.manufacturer())
print(transport.vehicle_registration_code())

science = Science()
print(dir(science))
print(science.dna_sequence())
print(science.measure_unit())
print(science.metric_prefix())
print(science.rna_sequence())
